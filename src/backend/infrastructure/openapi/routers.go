/*
 * POMODORK Backend API
 *
 * POMODORKのバックエンドAPI
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"github.com/gin-gonic/gin"
)

// UserRouterInterface ユーザに関するAPIのインターフェース
type UserRouterInterface interface {
	UserDelete(c *gin.Context)
	UserCreate(c *gin.Context)
	UserSearch(c *gin.Context)
}

// TwitterLinkRouterInterface Twitter連携に関するAPIのインターフェース
type TwitterLinkRouterInterface interface {
	TwitterLinkDelete(c *gin.Context)
	TwitterLinkCreate(c *gin.Context)
}

// TaskRouterInterface タスクに関するAPIのインターフェース
type TaskRouterInterface interface {
	TaskCreate(c *gin.Context)
	ActualTaskSearch(c *gin.Context)
	ScheduleTaskSearch(c *gin.Context)
	TaskUpdate(c *gin.Context)
}

// ApiRepositories APIのインターフェース群
type ApiRepositories struct {
	UserRouter  UserRouterInterface
	TaskRouter  TaskRouterInterface
	TwitterLink TwitterLinkRouterInterface
}

// NewApiRepositories ApiRepositoriesの生成
func NewApiRepositories() *ApiRepositories {
	apiRepositories := new(ApiRepositories)
	return apiRepositories
}

// NewRouter returns a new router.
func (api *ApiRepositories) NewRouter() *gin.Engine {
	router := gin.Default()

	// // タスクのAPI
	// router.POST("/v2/task", apis.TaskRouter.TaskCreate)
	// router.GET("/v2/tasks/actual", apis.TaskRouter.ActualTaskSearch)
	// router.GET("/v2/tasks/schedule", apis.TaskRouter.ScheduleTaskSearch)
	// router.PUT("/v2/task", apis.TaskRouter.TaskUpdate)

	// // Twitter連携のAPI
	// router.DELETE("/v2/twitter/link", apis.TwitterLink.TwitterLinkDelete)
	// router.POST("/v2/twitter/link", apis.TwitterLink.TwitterLinkCreate)

	// ユーザのAPI
	router.DELETE("/v2/user", api.UserRouter.UserDelete)
	router.POST("/v2/user", api.UserRouter.UserCreate)
	router.GET("/v2/user", api.UserRouter.UserSearch)

	return router
}
